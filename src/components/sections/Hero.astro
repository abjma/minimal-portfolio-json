---
import { basics } from "@cv";
import Section from "@/components/Section.astro";
import Mail from "@/components/icons/Mail.astro";
import Phone from "@/components/icons/Phone.astro";
import X from "@/components/icons/X.astro";
import GitHub from "@/components/icons/GitHub.astro";
import LinkedIn from "@/components/icons/LinkedIn.astro";
import WorldMap from "@/components/icons/WorldMap.astro";
import { boolean } from "astro/zod";

const { name, label, image, location, profiles, phone, email } = basics;
const { city, region } = location;

const SOCIAL_ICONS: Record<string, any> = {
  GitHub,
  LinkedIn,
  X,
};

const linkdInfo = profiles.find(({ network }) => network === "LinkedIn");
const linkedInurl = linkdInfo?.url;

const printInfo = [email, phone, linkedInurl].filter(Boolean).join(" • ");
---

<div class="container">
  <div class="info">
    <h1>{name}</h1>
    <h2>{label}</h2>
    <span>
      <WorldMap />
      {city}, {region}
    </span>

    <footer class="print">
      {printInfo}
    </footer>

    <footer class="no-print">
      {
        email && (
          <a
            href={`mailto:${email}`}
            title={`Enviar un mail a ${name} al correo ${email}`}
            target="_blank"
          >
            <Mail />
          </a>
        )
      }
      {
        phone && (
          <a
            href={`tel:${phone}`}
            title={`Llamar a ${name} al teléfono ${phone}`}
            target="_blank"
          >
            <Phone />
          </a>
        )
      }{
        profiles.map(({ network, url }) => {
          const Icon = SOCIAL_ICONS[network];

          return (
            <a
              href={url}
              title={`Visitar el perfil ${name} en ${network}`}
              target="_blank"
            >
              <Icon />
            </a>
          );
        })
      }
    </footer>
  </div>
  <figure>
    <img src={image} alt={name} />
  </figure>
</div>

<style>
  .container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
  }

  .info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-right: 32px;
  }

  h1 {
    font-size: 2rem;
  }

  h2 {
    color: #444;
    font-weight: 500;
    font-size: 1.1rem;
    text-wrap: balance;
  }

  img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 128px;
    border-radius: 16px;
  }

  span {
    color: #666;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.85rem;
  }

  footer {
    font-size: 0.65rem;
    color: #555;
    display: flex;
    gap: 4px;
    margin-top: 8px;
  }

  footer a {
    color: #777;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #eee;
    padding: 4px;
    height: 32px;
    width: 32px;
    border-radius: 6px;
    transition:
      background 0.3s ease,
      border 0.3s ease,
      color 0.3s ease;
  }

  footer a:hover {
    background: #eee;
    border: 1px solid #ddd;
    color: #3f51b6;
  }

  @media (width <= 768px) {
    .container {
      flex-direction: column;
    }

    .info {
      order: 2;
      padding-right: 0;
      align-items: center;
    }

    h2 {
      text-wrap: pretty;
      font-size: 1rem;
    }

    figure {
      margin: auto;
    }

    h1 {
      font-size: 1.8rem;
    }
  }

  @media (width <= 375px) {
    h1 {
      font-size: 1.7rem;
    }
    h2 {
      text-wrap: pretty;
      text-align: center;
      font-size: 0.9rem;
    }
  }
</style>
